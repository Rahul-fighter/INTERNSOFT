# -*- coding: utf-8 -*-
"""ML_project1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bvH4xj97neQPFLfbDuHHs0H38ebTExYR
"""

#IMPORTING THE LIBRARIES
import pandas as pd
import matplotlib.pyplot as plt

#READING THE DATA FROM YOUR FILES
url = 'https://raw.githubusercontent.com/Rahul-fighter/ml-data/master/advertising.csv'
data = pd.read_csv(url)
data.head()

# TO VISUALIZE DATA
fig,axis = plt.subplots(1,3,sharey = True)
data.plot(kind = 'scatter',x = 'TV' ,y = 'Sales',  ax = axis[0], figsize = (14,7))
data.plot(kind = 'scatter',x = 'Radio' ,y = 'Sales',  ax = axis[1], figsize = (14,7))
data.plot(kind = 'scatter',x = 'Newspaper' ,y = 'Sales',  ax = axis[2], figsize = (14,7))

#CREATING X AND Y FOR LINEAR REGRESSION
feature_cols = ['TV']
X = data[feature_cols]
y = data.Sales

#IMPORTING LINEAR REGRESSION ALGORITHM AND SIMPLE LINEAR REGRESSION
from sklearn.linear_model import LinearRegression
lr = LinearRegression()
lr.fit(X,y)

print(lr.intercept_)
print(lr.coef_)

result = 6.974821488229891 +0.05546477*50
print(y)

#CREATE A DATAFRAME WITH MIN AND MAX OF TABLE
X_new = pd.DataFrame({'TV':[data.TV.min(),data.TV.max()]})
X_new.head()

preds = lr.predict(X_new)
preds

data.plot(kind = 'scatter', x = 'TV', y = 'Sales')
plt.plot(X_new,preds,c='red',linewidth = 3)

import statsmodels.formula.api as smf

lm = smf.ols(formula = 'Sales ~ TV+Radio+Newspaper',data= data).fit()
lm.conf_int()

#FINDING THE PROBABILITY VALUE
lm.pvalues

#FINDING THE R-SQUARED VALUE
lm.rsquared

#MULTI LINEAR REGRESSION
feature_cols = ['TV','Radio','Newspaper']
X = data[feature_cols]
y = data.Sales
lr = LinearRegression()

lr.fit(X,y)

print(lr.intercept_)
print(lr.coef_)

lm = smf.ols(formula = 'Sales ~ TV+Radio+Newspaper',data= data).fit()
lm.conf_int()
lm.summary()

lm = smf.ols(formula = 'Sales ~ TV+Radio',data= data).fit()
lm.conf_int()
lm.summary()